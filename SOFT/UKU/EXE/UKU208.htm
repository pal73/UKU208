<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\EXE\UKU208.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\EXE\UKU208.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 644]: Last Updated: Mon Feb 05 15:50:46 2018
<BR><P>
<H3>Maximum Stack Usage =        256 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; ind_hndl &rArr; Ft_Gpu_CoCmd_Toggle &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from main.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">DMA_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">ENET_IRQHandler</a> from emac_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[19]">SSP1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from main.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from timer.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from uart0.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[2f]">fputc</a> from main.o(.text) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[2d]">main</a> from main.o(.text) referenced from entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[cf]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[30]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[78]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d0]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>sys_error</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, net_config_http.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_mem
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_mem
</UL>

<P><STRONG><a name="[54]"></a>SystemInit</STRONG> (Thumb, 314 bytes, Stack size 12 bytes, system_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, timer.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>beep_drv</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, beep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[d1]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[d2]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>strlen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rus_text_adaptor
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>

<P><STRONG><a name="[d3]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d4]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[39]"></a>clr_scrn</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, common_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bgnd_par
</UL>

<P><STRONG><a name="[36]"></a>find</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, common_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_bgnd
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[33]"></a>bin2bcd_int</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = bin2bcd_int
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcd
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcdyx
</UL>

<P><STRONG><a name="[34]"></a>bcd2lcd_zero</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bcd2lcd_zero
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcd
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcdyx
</UL>

<P><STRONG><a name="[32]"></a>int2lcdyx</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = int2lcdyx &rArr; bcd2lcd_zero
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2lcd_zero
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin2bcd_int
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[35]"></a>sub_bgnd</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sub_bgnd
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[37]"></a>int2lcd</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = int2lcd &rArr; bcd2lcd_zero
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bcd2lcd_zero
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bin2bcd_int
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[45]"></a>long2lcdhyx</STRONG> (Thumb, 126 bytes, Stack size 20 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = long2lcdhyx
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[52]"></a>tree_down</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, common_func.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[50]"></a>tree_up</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = tree_up
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[38]"></a>bgnd_par</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, common_func.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = bgnd_par
</UL>
<BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clr_scrn
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[3a]"></a>uartWrite</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[2f]"></a>fputc</STRONG> (Thumb, 14 bytes, Stack size 4 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uartWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[3b]"></a>font_9564_init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = font_9564_init &rArr; Ft_Gpu_CoCmd_SetFont &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Swap
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SetFont
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dlstart
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>rus_text_adaptor</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rus_text_adaptor
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[43]"></a>ind_hndl</STRONG> (Thumb, 9420 bytes, Stack size 112 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ind_hndl &rArr; Ft_Gpu_CoCmd_Toggle &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bgnd_par
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tree_up
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tree_down
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;long2lcdhyx
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcd
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sub_bgnd
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int2lcdyx
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd32
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Track
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Toggle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Text
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Swap
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Slider
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Number
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Keys
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_FgColor
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dlstart
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dial
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Button
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_BgColor
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rus_text_adaptor
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>InitUART0</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;beep_drv
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>main</STRONG> (Thumb, 1126 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = main &rArr; ind_hndl &rArr; Ft_Gpu_CoCmd_Toggle &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr8
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr32
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr16
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1_config
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd32
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_long
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_int
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_command
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_active
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Text
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Swap
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_FgColor
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dlstart
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Calibrate
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_BgColor
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUART0
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[56]"></a>spi1_config</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, riverdi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>spi1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, riverdi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr8
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr32
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr16
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd8
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd32
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;host_command
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_active
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer16
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartTransfer
</UL>

<P><STRONG><a name="[59]"></a>rd8</STRONG> (Thumb, 74 bytes, Stack size 4 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = rd8
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>rd32</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rd32
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[5b]"></a>wr8</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr8
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>wr16</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr16
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>wr32</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr32
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>command_active</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = command_active
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[58]"></a>host_command</STRONG> (Thumb, 54 bytes, Stack size 4 bytes, riverdi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = host_command
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[66]"></a>ssp1</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_wren
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_long
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_int
</UL>

<P><STRONG><a name="[65]"></a>ssp1_config</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_wren
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_long
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_int
</UL>

<P><STRONG><a name="[67]"></a>ssp1_unconfig</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_wren
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_long
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_int
</UL>

<P><STRONG><a name="[64]"></a>lc640_wren</STRONG> (Thumb, 52 bytes, Stack size 4 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lc640_wren
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
</UL>

<P><STRONG><a name="[68]"></a>lc640_rdsr</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = lc640_rdsr
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_long
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_write_int
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_long
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_read_int
</UL>

<P><STRONG><a name="[5d]"></a>lc640_read_int</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = lc640_read_int &rArr; lc640_rdsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>lc640_read_long</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = lc640_read_long &rArr; lc640_rdsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>lc640_write_int</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lc640_write_int &rArr; lc640_rdsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_wren
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>lc640_write_long</STRONG> (Thumb, 132 bytes, Stack size 12 bytes, 25lc640ssp1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lc640_write_long &rArr; lc640_rdsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_rdsr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lc640_wren
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_unconfig
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ssp1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 262 bytes, Stack size 20 bytes, uart0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>int_enable_eth</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, emac_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_mem
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_mem
</UL>

<P><STRONG><a name="[7c]"></a>int_disable_eth</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, emac_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_mem
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_mem
</UL>

<P><STRONG><a name="[26]"></a>ENET_IRQHandler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, emac_lpc17xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ENET_IRQHandler &rArr; alloc_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_in_queue
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alloc_mem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>Ft_Gpu_CoCmd_SendStr</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Toggle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Text
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Keys
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Button
</UL>

<P><STRONG><a name="[4c]"></a>Ft_Gpu_CoCmd_Text</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Ft_Gpu_CoCmd_Text &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[4d]"></a>Ft_Gpu_CoCmd_Number</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Ft_Gpu_CoCmd_Number &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[4a]"></a>Ft_Gpu_CoCmd_Toggle</STRONG> (Thumb, 70 bytes, Stack size 40 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Ft_Gpu_CoCmd_Toggle &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[47]"></a>Ft_Gpu_CoCmd_BgColor</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Ft_Gpu_CoCmd_BgColor &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[40]"></a>Ft_Gpu_CoCmd_Swap</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Ft_Gpu_CoCmd_Swap &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
</UL>

<P><STRONG><a name="[48]"></a>Ft_Gpu_CoCmd_Slider</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Ft_Gpu_CoCmd_Slider &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[46]"></a>Ft_Gpu_CoCmd_FgColor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Ft_Gpu_CoCmd_FgColor &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[4b]"></a>Ft_Gpu_CoCmd_Button</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Ft_Gpu_CoCmd_Button &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[5e]"></a>Ft_Gpu_CoCmd_Calibrate</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Ft_Gpu_CoCmd_Calibrate &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WaitCmdfifo_empty
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>Ft_Gpu_CoCmd_SetFont</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Ft_Gpu_CoCmd_SetFont &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
</UL>

<P><STRONG><a name="[49]"></a>Ft_Gpu_CoCmd_Track</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Ft_Gpu_CoCmd_Track &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[51]"></a>Ft_Gpu_CoCmd_Keys</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Ft_Gpu_CoCmd_Keys &rArr; Ft_Gpu_CoCmd_SendStr &rArr; Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[4e]"></a>Ft_Gpu_CoCmd_Dial</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Ft_Gpu_CoCmd_Dial &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
</UL>

<P><STRONG><a name="[3c]"></a>Ft_Gpu_CoCmd_Dlstart</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ft_copro_cmds.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Ft_Gpu_CoCmd_Dlstart &rArr; Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
</UL>

<P><STRONG><a name="[6d]"></a>Ft_Gpu_Hal_StartTransfer</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ft_Gpu_Hal_StartTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr32
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Rd16
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartCmdTransfer
</UL>

<P><STRONG><a name="[6e]"></a>Ft_Gpu_Hal_StartCmdTransfer</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ft_Gpu_Hal_StartCmdTransfer &rArr; Ft_Gpu_Hal_StartTransfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
</UL>

<P><STRONG><a name="[6f]"></a>Ft_Gpu_Hal_Transfer16</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Rd16
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer32
</UL>

<P><STRONG><a name="[70]"></a>Ft_Gpu_Hal_Transfer32</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr32
</UL>

<P><STRONG><a name="[72]"></a>Ft_Gpu_Hal_EndTransfer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr32
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr16
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Rd16
</UL>

<P><STRONG><a name="[71]"></a>Ft_Gpu_Hal_Rd16</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer16
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartTransfer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Cmdfifo_Freespace
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WaitCmdfifo_empty
</UL>

<P><STRONG><a name="[73]"></a>Ft_Gpu_Hal_Wr16</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ft_Gpu_Hal_Wr16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer16
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartTransfer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Updatecmdfifo
</UL>

<P><STRONG><a name="[74]"></a>Ft_Gpu_Hal_Wr32</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Transfer32
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartTransfer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_EndTransfer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>

<P><STRONG><a name="[75]"></a>Ft_Gpu_Hal_Updatecmdfifo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ft_Gpu_Hal_Updatecmdfifo &rArr; Ft_Gpu_Hal_Wr16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>

<P><STRONG><a name="[76]"></a>Ft_Gpu_Cmdfifo_Freespace</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Ft_Gpu_Cmdfifo_Freespace &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Rd16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_CheckCmdBuffer
</UL>

<P><STRONG><a name="[6c]"></a>Ft_Gpu_Hal_WaitCmdfifo_empty</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Rd16
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Calibrate
</UL>

<P><STRONG><a name="[77]"></a>Ft_Gpu_Hal_CheckCmdBuffer</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Ft_Gpu_Hal_CheckCmdBuffer &rArr; Ft_Gpu_Cmdfifo_Freespace &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Cmdfifo_Freespace
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmdBuf
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WrCmd32
</UL>

<P><STRONG><a name="[3e]"></a>Ft_Gpu_Hal_WrCmdBuf</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Ft_Gpu_Hal_WrCmdBuf &rArr; Ft_Gpu_Hal_WaitCmdfifo_empty &rArr; Ft_Gpu_Hal_Rd16 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi1
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Cmdfifo_Freespace
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_WaitCmdfifo_empty
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Updatecmdfifo
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_StartCmdTransfer
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_EndTransfer
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_CheckCmdBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SendStr
</UL>

<P><STRONG><a name="[3d]"></a>Ft_Gpu_Hal_WrCmd32</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ft_gpu_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Ft_Gpu_Hal_WrCmd32 &rArr; Ft_Gpu_Hal_Wr32 &rArr; Ft_Gpu_Hal_Transfer32 &rArr; Ft_Gpu_Hal_Transfer16
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Wr32
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_Updatecmdfifo
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_Hal_CheckCmdBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Track
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Toggle
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Text
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Swap
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Slider
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_SetFont
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Number
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Keys
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_FgColor
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dlstart
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Dial
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Calibrate
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_Button
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ft_Gpu_CoCmd_BgColor
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ind_hndl
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_9564_init
</UL>

<P><STRONG><a name="[31]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d5]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[d6]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[d7]"></a>__decompress1</STRONG> (Thumb, 92 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d8]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[62]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d9]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[da]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[69]"></a>alloc_mem</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, at_mem.o(i.alloc_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = alloc_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_error
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_disable_eth
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_enable_eth
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENET_IRQHandler
</UL>

<P><STRONG><a name="[7f]"></a>free_mem</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, at_mem.o(i.free_mem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_error
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_disable_eth
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_enable_eth
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_in_queue
</UL>

<P><STRONG><a name="[6a]"></a>put_in_queue</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at_ethernet.o(i.put_in_queue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = put_in_queue &rArr; free_mem
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_mem
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENET_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7a]"></a>_printf_core</STRONG> (Thumb, 338 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
